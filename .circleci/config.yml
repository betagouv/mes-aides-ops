# https://circleci.com/docs/2.0/executor-types/#using-machine
# Note: Use of machine may require additional fees in a future pricing update.

version: 2

jobs:
  build:
    machine: true
    environment:
      OPENFISCA_WORKERS: 2
    steps:
      - checkout
      - run:
          name: Create directory to store artifacts
          command: mkdir /tmp/artifacts
      - run:
          name: Run provisioning
          command: sudo ./bootstrap.sh origin/master origin/$CIRCLE_BRANCH
          no_output_timeout: 15m
      - run:
          name: Wait for server to start
          command: sleep 2m
          no_output_timeout: 3m
      - run:
          name: Snapshot OpenFisca Upstart configuration
          command: cp /etc/init/openfisca.conf /tmp/artifacts/openfisca.conf
      - run:
          name: Test node webserver
          command: wget --retry-connrefused --tries=10 -O /tmp/artifacts/node.out 0.0.0.0:8000 2>/tmp/artifacts/wget.log
      - run:
          name: Test node webserver
          command: cat /tmp/artifacts/node.out | grep --silent 'mes-aides.gouv.fr'
      - run:
          name: Test NGINX default server
          command: wget --retry-connrefused --tries=10 -O /tmp/artifacts/nginx.out 0.0.0.0 2>/tmp/artifacts/wget.log
      - run:
          name: Test NGINX default server
          command: cat /tmp/artifacts/nginx.out | grep --silent 'mes-aides.gouv.fr'
      - run:
          name: Test NGINX redirection from www
          command: "[[ `curl --silent 0.0.0.0 --header 'Host: www.mes-aides.gouv.fr' -s -o /dev/null -w '%{http_code} %{redirect_url}'` == '302 http://mes-aides.gouv.fr/' ]]"
      - run:
          name: Test OpenFisca webserver
          command: curl --silent 0.0.0.0:2000/variable/parisien | grep --silent openfisca_paris/paris.py
      - run:
          name: Test NGINX configuration for OpenFisca
          command: "curl --silent 0.0.0.0/variable/parisien --header 'Host: openfisca.mes-aides.gouv.fr' | grep --silent openfisca_paris/paris.py"
      - run:
          name: Test NGINX configuration for monitor endpoint
          command: "curl --silent 0.0.0.0 --header 'Host: monitor.mes-aides.gouv.fr' | grep --silent $CIRCLE_SHA1"
      - run:
          name: Snapshot running services on startup
          command: initctl list > /tmp/artifacts/service-list.start.txt
      - run:
          name: Snapshot OpenFisca service
          command: grep '^openfisca' /tmp/artifacts/service-list.start.txt > /tmp/artifacts/openfisca-service.start.txt

      - run:
          name: Run provisioning again
          command: sudo /opt/mes-aides/update.sh provision
      - run:
          name: Snapshot running services after provisioning
          command: initctl list > /tmp/artifacts/service-list.post-provision.txt
      - run:
          name: Snapshot OpenFisca service after provisioning
          command: grep '^openfisca' /tmp/artifacts/service-list.post-provision.txt > /tmp/artifacts/openfisca-service.post-provision.txt
      - run:
          name: Test OpenFisca PID has not changed after provisioning
          command: diff /tmp/artifacts/openfisca-service.post-provision.txt /tmp/artifacts/openfisca-service.start.txt

      - run:
          name: Run deployment
          command: sudo /opt/mes-aides/update.sh deploy
      - run:
          name: Snapshot running services after deployment
          command: initctl list > /tmp/artifacts/service-list.post-deploy.txt
      - run:
          name: Snapshot OpenFisca service after deployment
          command: grep '^openfisca' /tmp/artifacts/service-list.post-deploy.txt > /tmp/artifacts/openfisca-service.post-deploy.txt
      - run:
          name: Test OpenFisca PID has not changed after deployment
          command: diff /tmp/artifacts/openfisca-service.post-deploy.txt /tmp/artifacts/openfisca-service.start.txt
      - store_artifacts:
          path: /tmp/artifacts

  # CircleCI has a private key only allowed to trigger '/opt/mes-aides/update.sh provision'
  # That command line refreshes Mes-Aides-OPS and UI repositories and re-deploys the services
  provision:
    machine: true
    steps:
      - run:
          name: Provision production server
          command: ssh root@metal.mes-aides.gouv.fr

workflows:
  version: 2
  build_and_provision:
    jobs:
      - build
      - provision:
          requires:
            - build
          filters:
            branches:
              only: master
